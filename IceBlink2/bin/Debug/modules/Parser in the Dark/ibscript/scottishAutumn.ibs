		//some general scripting hint/typical pitfalls:
		// "=" is used for comparison and assignment
		//do not add "f" for float
		//use "," instaed "." for floats,like 1,5 instead of 1.5
		//use "True" for true and "False" for false (capitalization and quotation marks)
		//no ";" is used at end of line
		//start code you want to work at the start of the line - no tabs (liekly this holds only true of my outside toolset editor I use right now here)
		//will switch to intoolset editor once I taught the toolset the new properties
		
		//read in the switch for the two parts of the script (1. set entry and exit lists, 2. assign channel values) 
$useFirstPartOfScript = %Mod.useFirstPartOfWeatherScript

		//1. set entry weathers list and a number of exit lists (one for each weather type in the entry list) as global strings
		//format for weather valus in lists:
		//(SunnyWithClouds),Chance:[50],Duration:{123};(RainyWithFog),Chance:[50],Duration:{87},...
		// the important stuff here are the brackets, so you could also write actually:
		//(SunnyWithClouds)[50]{123}(RainyWithFog)[50]{87}...
		//it will store the three different items in brackets to three different lists (name, chance, duration) in the same order
		//chances, ie the middle []brackets, should cumulate to 100 always
		//the duration, ie the last {} brackets, will automatically be randomized by up to +50% or -50%, its unit is number of stepson map (doUpdate() calls)
		//I recommend no duration shorter than 40 as otherwise you might only see fade in and fade out the weather
		//all weathers existent in this script should appear in the entry list, use 0 as chance if you dont want the weather to be a starting weather
		 
if ($useFirstPartOfScript = "True")
		
		//let's set the entry weather list
		//always use EntryWeathers as name, dont change		
$Name = "EntryWeathers"
$Value = "(SunnyWithClouds)[0]{150}(RainyWithFog)[100]{50}(Clear)[0]{50}"
~gaSetGlobalString($Name,$Value)

		//let's set the exit weathers with name of the weathertype first and then its exit weathers
$Name = "SunnyWithClouds"
//$Value = "(RainyWithFog)[50]{50}(Clear)[50]{50}"
$Value = "(SunnyWitClouds)[100]{150}"
~gaSetGlobalString($Name,$Value)

$Name = "RainyWithFog"
//$Value = "(SunnyWithClouds)[50]{50}(Clear)[50]{50}"
$Value = "(RainyWithFog)[100]{50}"
~gaSetGlobalString($Name,$Value)

$Name = "Clear"
$Value = "(SunnyWithClouds)[50]{50}(RainyWith)[50]{50}"
~gaSetGlobalString($Name,$Value)

endif
		//2. second part: set the properties for a max of 6_ channels per weather type, set the non-used channels of the 6_ weather channels to false
if ($useFirstPartOfScript = "False")
		
		//reading in current weather name
$currentWeatherName = %Mod.currentWeatherName

if ($currentWeatherName  = "Clear")

			//Weather runs in channels 5 to 10
			//If you set a channel to True, you must (re-)define its settings below
			//If you set a channel to False, you can ignore the existing settings for the channel in the script here 
%CurrentArea.useFullScreenEffectLayer5 = "False"
%CurrentArea.useFullScreenEffectLayer6 = "False"
%CurrentArea.useFullScreenEffectLayer7 = "False"
%CurrentArea.useFullScreenEffectLayer8 = "False"
%CurrentArea.useFullScreenEffectLayer9 = "False"
%CurrentArea.useFullScreenEffectLayer10 = "False"

endif

if ($currentWeatherName  = "RainyWithFog")

			//Weather runs in channels 5 to 10
			//If you set a channel to True, you must (re-)define its settings below
			//If you set a channel to False, you can ignore the existing settings for the channel in the script here 
%CurrentArea.useFullScreenEffectLayer5 = "True"
%CurrentArea.useFullScreenEffectLayer6 = "True"
%CurrentArea.useFullScreenEffectLayer7 = "False"
%CurrentArea.useFullScreenEffectLayer8 = "False"
%CurrentArea.useFullScreenEffectLayer9 = "True"
%CurrentArea.useFullScreenEffectLayer10 = "True"
		
			//XXXXXXXXXXfull screen effect layer 5XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
			//you can (later) set channels to e not affected by weather, likely when you need  more than channels 1 to 4 for other full screen effects
if (%CurrentArea.changeableByWeatherScript5 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for these .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName5  = "heavySandstormLayerA"	
 			//setting up the (override) movement pattern, speeds and delay
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default, ie predefined, setting of the override animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.45 to e.g. 0.4), and overrideDelayLimit5  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit5  a little less than default 125, like 110)
%CurrentArea.directionalOverride5  = "linear"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX5  = 2
			//float, vertical speed (note the use of "," instead of "." here)
%CurrentArea.overrideSpeedY5  = 2
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit5  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource5  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName5 above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName5  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging5  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit5  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames5  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur5  = 100
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel5 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence5  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence5  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade5  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders5  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer5IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	
			//XXXXXXXXXXfull screen effect layer 6XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript6 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName6  = "heavySandstormLayerB"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.46 to e.g. 0.4), and overrideDelayLimit6  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit6  a little less than default 125, like 110)
%CurrentArea.directionalOverride6  = "linear"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX6  = 2,5
			//float, vertical speed
%CurrentArea.overrideSpeedY6  = 2,5
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit6  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource6  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName6  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName6  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging6  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit6  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames6  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur6  = 100 
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel6 = 0
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence6  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence6  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade6  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders6  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer6IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

			//XXXXXXXXXXfull screen effect layer 7XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript7 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName7  = "rainLayerA"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.47 to e.g. 0.4), and overrideDelayLimit7  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit7  a little less than default 125, like 110)
%CurrentArea.directionalOverride7  = "rain"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX7  = -100
			//float, vertical speed
%CurrentArea.overrideSpeedY7  = -2,4
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit7  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource7  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName7  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName7  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging7  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit7  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames7  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur7  = 100
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel7 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence7  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence7  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade7  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders7  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer7IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	
			//XXXXXXXXXXfull screen effect layer 8XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript8 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName8  = "lightRainLayerB"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.48 to e.g. 0.4), and overrideDelayLimit8  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit8  a little less than default 125, like 110)
%CurrentArea.directionalOverride8  = "rain"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX8  = -100
			//float, vertical speed
%CurrentArea.overrideSpeedY8  = -100
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit8  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource8  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName8  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName8  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging8  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit8  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames8  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur8  = 100
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel8 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence8  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence8  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade8  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders8  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer8IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			
			//XXXXXXXXXXfull screen effect layer 9XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript9 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName9  = "lightningLayerB"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.49 to e.g. 0.4), and overrideDelayLimit9  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit9  a little less than default 125, like 110)
%CurrentArea.directionalOverride9  = "linear"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX9  = 0
			//float, vertical speed
%CurrentArea.overrideSpeedY9  = 0
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit9  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource9  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName9  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName9  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging9  = "True"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit9  = 0
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames9  = 8  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur9  = 30
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel9 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence9  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence9  = -8
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade9  = "False"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders9  = "True"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer9IsTop = "True"
		
endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			
			//XXXXXXXXXXfull screen effect layer 10XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript10 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName10  = "lightningLayerA"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.410 to e.g. 0.4), and overrideDelayLimit10  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit10  a little less than default 125, like 110)
%CurrentArea.directionalOverride10  = "linear"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX10  = 0
			//float, vertical speed
%CurrentArea.overrideSpeedY10  = 0
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit10  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource10  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName10  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName10  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging10  = "True"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit10  = 0
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames10  = 8  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur10  = 30
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel10 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence10  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence10  = -8
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade10  = "False"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders10  = "True"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer10IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
endif		

			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	
		//each exit weather gets definitions for the 6 weather layers
if ($currentWeatherName  = "SunnyWithClouds")

			//Weather runs in channels 5 to 10
			//If you set a channel to True, you must (re-)define its settings below
			//If you set a channel to False, you can ignore the existing settings for the channel in the script here 
%CurrentArea.useFullScreenEffectLayer5 = "True"
%CurrentArea.useFullScreenEffectLayer6 = "True"
%CurrentArea.useFullScreenEffectLayer7 = "True"
%CurrentArea.useFullScreenEffectLayer8 = "True"
%CurrentArea.useFullScreenEffectLayer9 = "True"
%CurrentArea.useFullScreenEffectLayer10 = "False"
		
			//XXXXXXXXXXfull screen effect layer 5XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript5 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName5  = "heavyCloudLayerB"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.45 to e.g. 0.4), and overrideDelayLimit5  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit5  a little less than default 125, like 110)
%CurrentArea.directionalOverride5  = "clouds"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX5  = -100
			//float, vertical speed
%CurrentArea.overrideSpeedY5  = -100
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit5  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource5  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName5  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName5  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging5  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit5  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames5  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur5  = 100
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel5 = 0
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence5  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence5  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade5  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders5  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer5IsTop = "True"
		
endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	
			//XXXXXXXXXXfull screen effect layer 6XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript6 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName6  = "heavySnowLayerA"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.46 to e.g. 0.4), and overrideDelayLimit6  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit6  a little less than default 125, like 110)
%CurrentArea.directionalOverride6  = "snow"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX6  = -100
			//float, vertical speed
%CurrentArea.overrideSpeedY6  = -100
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit6  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource6  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName6  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName6  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging6  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit6  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames6  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur6  = 50 
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel6 = 7
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence6  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence6  = 10
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade6  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders6  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer6IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

			//XXXXXXXXXXfull screen effect layer 7XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript7 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName7  = "heavySnowLayerB"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.47 to e.g. 0.4), and overrideDelayLimit7  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit7  a little less than default 125, like 110)
%CurrentArea.directionalOverride7  = "snow"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX7  = 0,4
			//float, vertical speed
%CurrentArea.overrideSpeedY7  = -0,65
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit7  = 380
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource7  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName7  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName7  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging7  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit7  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames7  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur7  = 0
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel7 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence7  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence7  = 10
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade7  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders7  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer7IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	
			//XXXXXXXXXXfull screen effect layer 8XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript8 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName8  = "heavyCloudLayerA"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.48 to e.g. 0.4), and overrideDelayLimit8  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit8  a little less than default 125, like 110)
%CurrentArea.directionalOverride8  = "clouds"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX8  = 0,6
			//float, vertical speed
%CurrentArea.overrideSpeedY8  = 0,4
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit8  = 650
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource8  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName8  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName8  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging8  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit8  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames8  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur8  = 100
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel8 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence8  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence8  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade8  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders8  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer8IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			
			//XXXXXXXXXXfull screen effect layer 9XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript9 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName9  = "heavyCloudLayerC"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.49 to e.g. 0.4), and overrideDelayLimit9  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit9  a little less than default 125, like 110)
%CurrentArea.directionalOverride9  = "clouds"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX9  = 0,7
			//float, vertical speed
%CurrentArea.overrideSpeedY9  = 0,8
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit9  = 800
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource9  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName9  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName9  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging9  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit9  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames9  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur9  = 100 
			//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel9 = 0
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence9  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence9  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade9  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders9  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer9IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			
			//XXXXXXXXXXfull screen effect layer 10XXXXXXXXXXXXX
			//XXXXX Most Relevant Values:name of .png and how it is moved XXXXXX
if (%CurrentArea.changeableByWeatherScript10 = "True")
			//known layer.png names (feel free to add more grapics): fogLayerA, fogLayerB, cloudLayerA, rainLayerA, rainLayerB, snowLayerA, snowLayerB
			//see special naming rules for thse .png below under shape changing animations
%CurrentArea.fullScreenEffectLayerName10  = "snowLayerA"	
 			//setting up the override movement patterns
        		//a value of -100 ("" in case of overrideIsNoScrollSource1) means that the default setting of the overide animation pattern for this parameter shall be used
        		//so far existing directional overrides:
			//linear (default; a move in the specified x and y direction, straight and scrolling, defaults with x to 1_ and y to 1_, no delay limit used) 
        		//rain (2 layers recommended; make one layer's y speed a little slower than default -2.8, like -2.4) 
        		//clouds (1_ layer recommended; defaults at 0.5y, 0.5x, 750 delay)
        		//snow (2 layers recommended; make one layer's y speed a little faster than default -0.55, like -0.65, mayhaps slower for x (default: 0.410 to e.g. 0.4), and overrideDelayLimit10  a little less than defaut 470, like 380) 
        		//fog (2 layers recommended, make one layer's overrideDelayLimit10  a little less than default 125, like 110)
%CurrentArea.directionalOverride10  = "snow"
			//float, horizontal speed, negative values mean move down
%CurrentArea.overrideSpeedX10  = -100
			//float, vertical speed
%CurrentArea.overrideSpeedY10  = -100
			//int, only relevant for effects that have a randomized change going on, this determines the rate of random change
			//the higher, the slower, only positive numbers        
%CurrentArea.overrideDelayLimit10  = -100
			//leave at "" as the override move pattern chosen sets the nature of scroll/noscroll up automatically correctly
%CurrentArea.overrideIsNoScrollSource10  = ""

			//XXXXX Settings for shape changing weather animation XXXXX
			//Set to "True" to call a series of shape change frame .png; the fist one should have its name end with 1, the second with 2, etc.
			//The fullScreenEffectLayerName10  above should contain a name WITHOUT the ending 1_ as the 1_ is added automatically by code
			//the names of the .png associated with this effect will be fullScreenEffectLayerName1+1,fullScreenEffectLayerName1+2...
			//Example: fullScreenEffectLayerName10  above is set to "changingPuffyCloud"
			//the .png in graphics folder might be named: changingPuffyCloud1, changingPuffyCloud2, changingPuffyCloud3,...    
%CurrentArea.isChanging10  = "False"
        		//float, the counter for this is increased by 1_ each render call, when the limit is reached, the frame is changed to the next one
%CurrentArea.changeLimit10  = 60
			//float, the number of different frames existing for the shape changing animation
%CurrentArea.changeNumberOfFrames10  = 4  
     
			//XXXXX Settings for animation that happen only randomly/frequently XXXXX 
			//int, this out of 100 chance is rolled for on each call of the doupdate() method, ie och each step (or realTimeInterval if used)         
%CurrentArea.fullScreenEffectChanceToOccur10  = 100
//int, the target channel will be set to active when the random chance for current channel is rolled;
			//set target channel chance to occur to zero and and let it have the same number of cycles as this channel to make them act totally in parallel 
%CurrentArea.activateTargetChannelInParallelToThisChannel10 = 0 
			//int, counted upward on each render and determines the point which animation ceases (and can be reactivte by random roll for chance t occur)
			//zero as value for numberOfCyclesPerOccurence10  signifies an endlessly running animation, also means no random rolls for activation        
%CurrentArea.numberOfCyclesPerOccurence10  = 0
			//If set to True, the cyclic effect is fading in as well as fading out at the start and end of its lifetime
%CurrentArea.useCyclicFade10  = "True"

			//XXXXX Other settings XXXXX
			//If set to false the animation is always centered above party, even near map border (usually best), otherwise it looses this focus when approaching border, retaining itself fully on map 
%CurrentArea.containEffectInsideAreaBorders10  = "False"
			//as weather usually happens above party, this set to True by default; can be set to false to display stuff below the party
			//note on effect draw order: top is always drawn over bottom, within each group higher number is drawn over lower number
%CurrentArea.FullScreenEffectLayer10IsTop = "True"

endif
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
endif

			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
			//XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
endif
